# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'eab71978-bfb4-49c3-805e-1bcc31e96aa1'
  imageRepository: 'logistnet'
  containerRegistry: 'containerregistrylogistnet.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'containerregistrylogistnetauth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy to dev
  dependsOn: Build
  jobs:
    - job: Deploy
      displayName: Deploy to AKS
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'manifests'
            targetPath: '$(Pipeline.Workspace)/manifests'
        - task: KubernetesManifest@1
          inputs:
            action: 'createSecret'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'aks-conexion'
            namespace: 'default'
            secretType: 'dockerRegistry'
            secretName: '$(imagePullSecret)'
            dockerRegistryEndpoint: '$(dockerRegistryServiceConnection)'
        - task: KubernetesManifest@1
          inputs:
            action: 'deploy'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'aks-conexion'
            namespace: 'default'
            manifests: |
        - task: KubernetesManifest@1
          inputs:
            action: 'deploy'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'aks-conexion'
            namespace: 'default'
            manifests: |
              $(Pipeline.Workspace)/manifests/deployment.yml
              $(Pipeline.Workspace)/manifests/service.yml
            containers: |
              $(containerRegistry)/$(imageRepository):$(tag)
            imagePullSecrets: |
              $(imagePullSecret)
            rolloutStatusTimeout: '10'
      
            
